/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

vertices
(
    (0          0     0) //0
    (.0020     0     0) //1
    (.0020     0.001     0) //2
    (0          0.001     0) //3
    (0          0     0.001) //4
    (.0020     0     0.001 ) //5
    (.0020     0.001     0.001 ) //6
    (0          0.001     0.001 ) //7

 

    (.0040     0     0) //8
    (.0040     0.001    0) //9
    (.0040     0     0.001 ) //10
    (.0040     0.001     0.001 ) //11

 

    (.0020    -.002     0) //12
    (.0040     -.002     0) //13
    (.0020     -.002     0.001 ) //14
    (.0040     -.002     0.001 ) //15

 

    (0.006     0     0) //16
    (0.006     0.001    0) //17
    (0.006     0     0.001) //18
    (0.006     0.001     0.001) //19
);

 

blocks
(
    hex (0 1 2 3 4 5 6 7)    (20 10 1) simpleGrading (1 1 1)
    hex (1 8 9 2 5 10 11 6)     (20 10 1) simpleGrading (1 1 1)
    hex (12 13 8 1 14 15 10 5)     (20 20 1) simpleGrading (1 1 1)
    hex (8 16 17 9 10 18 19 11) (20 10 1) simpleGrading (1 1 1)
);

 

edges();

 

boundary
(
    right
    {
        type patch;
        faces
        (
          (18 16 17 19)
        );
    }
    left
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    top
    {
        type wall;
        faces
        (
            (7 6 2 3)
        (6 11 9 2)
        (11 19 17 9)
        );
    }
    bottom
    {
        type wall;
        faces
        (
            (1 5 4 0)
            (14 15 13 12)
        (14 12 1 5)
        (15 13 8 10)
        (10 18 16 8)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        (5 10 11 6)
        (1 8 9 2)
        (12 13 8 1)
        (14 15 10 5)
        (8 16 17 9)
        (10 18 19 11)
        );
    }
);

 

mergePatchPairs();

 

// ************************************************************************* //
 
